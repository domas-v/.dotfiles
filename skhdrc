#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey       = <mode> '<' <action> | <action>
#
#                       mode         = 'name of mode' | <mode> ',' <mode>
#
#                       action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#                                      <keysym> ':' <command>          | <keysym> '->' ':' <command>
#                                      <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#
#                       keysym       = <mod> '-' <key> | <key>
#
#                       mod          = 'modifier keyword' | <mod> '+' <mod>
#
#                       key          = <literal> | <keycode>
#
#                       literal      = 'single letter or built-in keyword'
#
#                       keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       proc_map_lst = * <proc_map>
#
#                       proc_map     = <string> ':' <command> | <string>     '~' |
#                                      '*'      ':' <command> | '*'          '~'
#
#                       string       = '"' 'sequence of characters' '"'
#
#                       command      = command is executed through '$SHELL -c' and
#                                      follows valid shell syntax. if the $SHELL environment
#                                      variable is not set, it will default to '/bin/bash'.
#                                      when bash is used, the ';' delimeter can be specified
#                                      to chain commands.
#
#                                      to allow a command to extend into multiple lines,
#                                      prepend '\' at the end of the previous line.
#
#                                      an EOL character signifies the end of the bind.
#
#                       ->           = keypress is not consumed by skhd
#
#                       *            = matches every application not specified in <proc_map_lst>
#
#                       ~            = application is unbound and keypress is forwarded per usual, when specified in a <proc_map>
#
#  NOTE(koekeishiya): A mode is declared according to the following rules:
#
#                       mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#                                   '::' <name> '@'               | '::' <name>
#
#                       name      = desired name for this mode,
#
#                       @         = capture keypresses regardless of being bound to an action
#
#                       command   = command is executed through '$SHELL -c' and
#                                   follows valid shell syntax. if the $SHELL environment
#                                   variable is not set, it will default to '/bin/bash'.
#                                   when bash is used, the ';' delimeter can be specified
#                                   to chain commands.
#
#                                   to allow a command to extend into multiple lines,
#                                   prepend '\' at the end of the previous line.
#
#                                   an EOL character signifies the end of the bind.

# add an on_enter command to the default mode
# :: default : yabai -m config active_window_border_color 0xff775759
#
# defines a new mode 'test' with an on_enter command, that captures keypresses
# :: test @ : yabai -m config active_window_border_color 0xff24ccaa
#
# from 'default' mode, activate mode 'test'
# cmd - x ; test
#
# from 'test' mode, activate mode 'default'
# test < cmd - x ; default
#
# launch a new terminal instance when in either 'default' or 'test' mode
# default, test < cmd - return : open -na /Applications/Terminal.app

# application specific bindings
#
# cmd - n [
#     "kitty"       : echo "hello kitty"
#     *             : echo "hello everyone"
#     "qutebrowser" : echo "hello qutebrowser"
#     "terminal"    ~
#     "finder"      : false
# ]

# specify a file that should be included as an additional config-file.
# treated as an absolutepath if the filename begins with '/' otherwise
# the file is relative to the path of the config-file it was loaded from.
#
# .load "/Users/Koe/.config/partial_skhdrc"
# .load "partial_skhdrc"

# prevent skhd from monitoring events for specific applications.
#
# .blacklist [
#    "kitty"
#    "terminal"
#    "qutebrowser"
# ]

# config
alt + shift - 0x2F : aerospace enable toggle

# apps
alt - e : open /Applications/kitty.app/
alt - q : open /Applications/Brave\ Browser.app/
alt - g : open /Applications/ChatGPT.app/
alt - z : open /Applications/Slack.app/
alt - x : open /Applications/Messenger.app/
alt - c : open /System/Applications/Messages.app

# layout
# alt + shift - g : aerospace layout tiles horizontal vertical
alt + shift - g : aerospace layout horizontal vertical
alt + shift - f : aerospace layout accordion tiles
alt + shift - v : aerospace fullscreen
alt + shift - c : aerospace layout tiling floating
alt + shift - r : aerospace flatten-workspace-tree

# wasd shortcuts
alt - a : aerospace focus --boundaries-action wrap-around-the-workspace left
alt - s : aerospace focus --boundaries-action wrap-around-the-workspace down
alt - w : aerospace focus --boundaries-action wrap-around-the-workspace up
alt - d : aerospace focus --boundaries-action wrap-around-the-workspace right
alt + shift - w : aerospace move up
alt + shift - a : aerospace move left
alt + shift - s : aerospace move down
alt + shift - d : aerospace move right
alt + ctrl - w : aerospace join-with up
alt + ctrl - a : aerospace join-with left
alt + ctrl - s : aerospace join-with down
alt + ctrl - d : aerospace join-with right

# vim hjkl
alt - j : aerospace focus --boundaries-action wrap-around-the-workspace down
alt - h : aerospace focus --boundaries-action wrap-around-the-workspace left
alt - k : aerospace focus --boundaries-action wrap-around-the-workspace up
alt - l : aerospace focus --boundaries-action wrap-around-the-workspace right
alt + shift - h : aerospace move left
alt + shift - k : aerospace move up
alt + shift - j : aerospace move down
alt + shift - l : aerospace move right
alt + ctrl - h : aerospace join-with left
alt + ctrl - j : aerospace join-with up
alt + ctrl - k : aerospace join-with down
alt + ctrl - l : aerospace join-with right

# monitors
alt - n : aerospace focus-monitor --wrap-around next
alt - p : aerospace focus-monitor --wrap-around prev
alt + shift - n : aerospace move-node-to-monitor --wrap-around --focus-follows-window next
alt + shift - p : aerospace move-node-to-monitor --wrap-around --focus-follows-window prev

# windows
alt - 0x1D : aerospace balance-sizes
alt - 0x1B : aerospace resize smart -50
alt + shift - 0x1B : aerospace resize smart -300
alt - 0x18 : aerospace resize smart +50
alt + shift - 0x18 : aerospace resize smart +300
#
# workspaces
alt - 0x1E : aerospace list-workspaces --monitor all | aerospace workspace next --wrap-around
alt - 0x21 : aerospace list-workspaces --monitor all | aerospace workspace prev --wrap-around
alt + shift - 0x1E : aerospace list-workspaces --monitor all | aerospace move-node-to-workspace next --wrap-around
alt + shift - 0x21 : aerospace list-workspaces --monitor all | aerospace move-node-to-workspace prev --wrap-around

alt - 1 : aerospace workspace 1
alt - 2 : aerospace workspace 2
alt - 3 : aerospace workspace 3
alt - 4 : aerospace workspace 4
alt - 5 : aerospace workspace 5
alt - 6 : aerospace workspace 6
alt - 7 : aerospace workspace 7
alt - 8 : aerospace workspace 8
alt - 9 : aerospace workspace 9

alt + shift - 1 : aerospace move-node-to-workspace 1
alt + shift - 2 : aerospace move-node-to-workspace 2
alt + shift - 3 : aerospace move-node-to-workspace 3
alt + shift - 4 : aerospace move-node-to-workspace 4
alt + shift - 5 : aerospace move-node-to-workspace 5
alt + shift - 6 : aerospace move-node-to-workspace 6
alt + shift - 7 : aerospace move-node-to-workspace 7
alt + shift - 8 : aerospace move-node-to-workspace 8
alt + shift - 9 : aerospace move-node-to-workspace 9

alt + ctrl - n : aerospace move-workspace-to-monitor next --wrap-around
alt + ctrl - p : aerospace move-workspace-to-monitor prev --wrap-around

